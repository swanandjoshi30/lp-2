graph = {
	'0' : ['1','2'],
	'1' : ['0','4'],
	'2' : ['0','3'],
	'4' : ['1'],
	'3' : ['2','6','5'],
	'6' : ['3'],
	'5' : ['3']
}

visited1 = set()
visited2 = set()
queue = ['0']
visited1.add('0')


def bfs(visited, graph, queue):
  if not queue :
    return  
  else:
    s = queue.pop(0) 
    print (s, end = " ") 
    for neighbour in graph[s]:
      if neighbour not in visited:
        visited.add(neighbour)
        queue.append(neighbour)
    bfs(visited, graph,queue)

def dfs(visited2,graph,node):
	if node not in visited2:
		print(node,end=" ")
		visited2.add(node)
		for neighbour in graph[node]:
			dfs(visited2,graph,neighbour)
			
print("\n\nFollowing is the Breadth-First Search : \n")
bfs(visited1, graph, queue)
print("\nFollowing is the Depth-First Search : \n")
dfs(visited2, graph, '0')






#---------------Menu driven--------------
def bfs(visited, graph, queue):
    if not queue:
        return
    else:
        s = queue.pop(0)
        print(s, end=" ")
        for neighbour in graph[s]:
            if neighbour not in visited:
                visited.add(neighbour)
                queue.append(neighbour)
        bfs(visited, graph, queue)

def dfs(visited, graph, node):
    if node not in visited:
        print(node, end=" ")
        visited.add(node)
        for neighbour in graph[node]:
            dfs(visited, graph, neighbour)

# ----------- Graph Input (once) -------------
graph = {}
num_nodes = int(input("Enter number of nodes: "))
for _ in range(num_nodes):
    node = input("Enter node: ")
    neighbours = input(f"Enter neighbors of {node} (space-separated): ").split()
    graph[node] = neighbours

# ----------- Menu Loop -------------
while True:
    print("\n--- MENU ---")
    print("1. Perform BFS")
    print("2. Perform DFS")
    print("3. Exit")
    choice = input("Enter your choice (1/2/3): ")

    if choice == '1':
        visited1 = set()
        start_bfs = input("Enter starting node for BFS: ")
        queue = [start_bfs]
        visited1.add(start_bfs)
        print("\nFollowing is the Breadth-First Search:")
        bfs(visited1, graph, queue)

    elif choice == '2':
        visited2 = set()
        start_dfs = input("Enter starting node for DFS: ")
        print("\nFollowing is the Depth-First Search:")
        dfs(visited2, graph, start_dfs)

    elif choice == '3':
        print("Exiting program.")
        break

    else:
        print("Invalid choice. Please enter 1, 2, or 3.")



