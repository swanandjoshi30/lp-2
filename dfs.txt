# ----------- DFS Program ---------------

graph = {}
num_nodes = int(input("Enter number of nodes for DFS: "))
for _ in range(num_nodes):
    node = input("Enter node: ")
    neighbours = input(f"Enter neighbors of {node} (space-separated): ").split()
    graph[node] = neighbours

start_dfs = input("Enter starting node for DFS: ")
visited = set()

def dfs(visited, graph, node):
    if node not in visited:
        print(node, end=" ")
        visited.add(node)
        for neighbour in graph[node]:
            dfs(visited, graph, neighbour)

print("\nFollowing is the Depth-First Search:\n")
dfs(visited, graph, start_dfs)




#-----------------------Without user input-----------

graph = {
  '0' : ['1','2'],
  '1' : ['0','4'],
  '2' : ['0','3'],
  '4' : ['1'],
  '3' : ['2','6','5'],
  '6' : ['3'],
  '5' : ['3']
}

visited1 = set() 
def dfs(visited1, graph, node):
    if node not in visited1:
        print (node, end = " ")
        visited1.add(node)
        for neighbour in graph[node]:
            dfs(visited1, graph, neighbour)
print("\nFollowing is the Depth-First Search : \n")
dfs(visited1, graph, '0')