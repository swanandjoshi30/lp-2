def isSafeToColor(graph, color, V):
    for i in range(V):
        for j in range(i + 1, V):
            if graph[i][j] == 1 and color[i] == color[j]:
                return False
    return True


def printColorArray(color):
    print("Solution colors are:")
    for c in color:
        print(c, end=" ")
    print()


def graphColoring(graph, m, i, color, V):
    #i : current vertex (0) color list to store assigned color V vertices
    if i == V:
        if isSafeToColor(graph, color, V):
            printColorArray(color)
            return True
        return False

    for j in range(1, m + 1):
        color[i] = j
        if graphColoring(graph, m, i + 1, color, V):
            return True
        color[i] = 0

    return False


print("Enter number of vertices:")
V = int(input())

print(f"Enter the adjacency matrix ({V}x{V}):")
graph = []
for _ in range(V):
    row = list(map(int, input().split()))
    graph.append(row)

print("Enter the number of colors (m):")
m = int(input())

color = [0] * V

if not graphColoring(graph, m, 0, color, V):
    print("No solution exists.")
